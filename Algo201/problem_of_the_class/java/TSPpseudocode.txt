Define: List<DataType> for declaring a dynamic array
Define: let list is List instance list.add(object) is add data in the List

Define: array.lenght is a number of object that in an array

Function swapNumber(selectIndex:int[], oldSelectIndex:int[], i:int) :
    For Let arr <- 0 ; arr < selectIndex.length ; arr+= 1 Then
        selectIndex[arr] = oldSelectIndex[arr];
    Endfor
    Let temp <- selectIndex[0]
    selectIndex[0] <- selectIndex[i+1]
    selectIndex[i+1] <- temp
Endfunction

Define : List<Integer> mins
Define : List<String> index

Start
    Let cost <- { { 9, 2, 7, 8 }, { 6, 4, 3, 7 }, { 5, 8, 1, 8 }, { 7, 6, 9, 4 } }
    Let selectIndex <- {0,1,2,3}
    Let oldSelectIndex <- {}
    Let N <- cost.length
   
    For Let arr <- 0 ; arr < selectIndex.length ; arr+= 1 Then
        oldSelectIndex[arr] = selectIndex[arr]
    Endfor
    
    For Let i <- 0 ; i < N ; i+=1 Then
        For Let j <- 0; j<6 ; j+=1 Then
            If j == 0 Then
                Let total <- cost[0][selectIndex[0]] + cost[1][selectIndex[1]] + cost[2][selectIndex[2]] + cost[3][selectIndex[3]]; 
            Else if j % 2 == 1 Then
                Let oldValue = selectIndex[2]
                selectIndex[2] = selectIndex[3]
                selectIndex[3] = oldValue
            Endif
            if j % 2 == 0 Then
                Let oldValue = selectIndex[1]
                selectIndex[1] = selectIndex[2]
                selectIndex[2] = oldValue
            Endif
        Endfor
    
        If i == 3 Then
            Break
        Endif
        swapNumber(selectIndex,oldSelectIndex,i)
    Endfor
    
End    